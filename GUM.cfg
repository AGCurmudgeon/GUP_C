#-------------------------#
#   PRIMARY               #
#-------------------------#

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pause the print and park
variable_etemp: 0
gcode:
    {% if printer.pause_resume.is_paused %}
        RESPOND MSG="Print is already paused"
    {% else %}
        SAVE_GCODE_STATE NAME=PAUSE_state
        RESPOND MSG="PAUSE"
        BASE_PAUSE
        PARK
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
        M104 S0
        SET_IDLE_TIMEOUT TIMEOUT=36000
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% if not printer.pause_resume.is_paused %}
        RESPOND MSG="Print is not paused. Resume ignored"
    {% else %}
        M109 S{printer["gcode_macro PAUSE"].etemp} ; wait for hotend to heat back up
        {% elif printer.extruder.can_extrude %}
        # Pull back the filament a little bit
            G92 E0
            G1 E24 F2100
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1 MOVE_SPEED=100
        SET_IDLE_TIMEOUT TIMEOUT=3600
        RESPOND MSG="UNPAUSE"
        BASE_RESUME
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    PARK
    {% elif printer.extruder.can_extrude %}
        # Pull back the filament a little bit
        G92 E0
        G1 E-20 F2100
    {% endif %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
    SET_IDLE_TIMEOUT TIMEOUT=3600
    M107
    M400
    CLEAR_PAUSE
    BED_MESH_CLEAR
    SDCARD_RESET_FILE
    FILAMENT_OFF
    BASE_CANCEL_PRINT

#-------------------------#
#        HELPERS          #
#-------------------------#

[gcode_macro FILAMENT_ON]
gcode:
    SET_FILAMENT_SENSOR SENSOR="runout_sensor" ENABLE=1
    SET_FILAMENT_SENSOR SENSOR="switch_sensor" ENABLE=1 

[gcode_macro FILAMENT_OFF]
gcode:
    SET_FILAMENT_SENSOR SENSOR="runout_sensor" ENABLE=0
    SET_FILAMENT_SENSOR SENSOR="switch_sensor" ENABLE=0 


#-------------------------#
#        HELPERS          #
#-------------------------#
[gcode_macro BED_MESH]
gcode:
    {% if BED_MESH_PROFILE == "" %}
        G0 X175 Y175
        BED_MESH_CALIBRATE adaptive=0
        CARTOGRAPHER_TOUCH
    {% else %}
        RESPOND MSG="Load bed mesh profile : {BED_MESH_PROFILE}"
        G0 X175 Y175
        BED_MESH_PROFILE LOAD={BED_MESH_PROFILE}
        CARTOGRAPHER_TOUCH
    {% endif %}

[gcode_macro shaper_check]
gcode:
    M106 S128
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=65
    quad_gantry_level
    G0 X175 Y175 Z20
    AXES_SHAPER_CALIBRATION

[gcode_macro belt_check]
gcode:
    M106 S128
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=65
    quad_gantry_level
    G0 X175 Y175 Z20
    COMPARE_BELTS_RESPONSES
    SET_STEPPER_ENABLE stepper=stepper_x ENABLE=0
    SET_STEPPER_ENABLE stepper=stepper_y ENABLE=0

[gcode_macro vibe_check]
gcode:
    belt_check
    shaper_check
    create_vibrations_profile

#-------------------------#
#        BACKUP           #
#-------------------------#

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$0\""
timeout: 90.0
verbose: True
